@using JobTracker.Models

@if (IsModalVisible){
    <div class="modal-container">
        <div class="modal-content-container">
            <div class="modal-header">
                <div class="modal-header-left">
                    <h1 class="modal-header-title">
                        @(string.IsNullOrEmpty(jobTitleInput) ? "Job Title" : jobTitleInput)
                    </h1>

                    <small>
                        @(string.IsNullOrEmpty(companyNameInput) ? "Company Name" : companyNameInput)
                    </small>
                    <small>
                        <b>•</b> @statusInput
                    </small>
                </div>

                <div class="modal-header-right">
                    <button class="cancel" @onclick="CloseJobModal">
                        Cancel
                    </button>
                    <button class="save" @onclick="SaveJobModal">
                        Save
                    </button>
                </div>
            </div>

            <div class="modal-body">

                <div class="hw-row">
                    <div>
                        <p>Company Name</p>
                        <input type="text" class="input" @bind="companyNameInput" placeholder="Company Name" />
                    </div>
                    <div>
                        <p>Job Title</p>
                        <input type="text" @bind="jobTitleInput" class="input" placeholder="Job Title" />
                    </div>
                </div>

                <div class="hw-row">
                    <div>
                        <p>Location</p>
                        <input type="text" class="input" @bind="locationInput" placeholder="Location" />
                    </div>
                    <div>
                        <p>Date Applied</p>
                        <input type="date" @bind="dateAppliedInput" class="input" />
                    </div>
                </div>

                <div class="hw-row">
                    <div>
                        <p>Status</p>
                        <select class="input" @bind="statusInput" required>
                            <option value="" disabled hidden selected>Status</option>
                            <option>Interested</option>
                            <option>Applied</option>
                            <option>Interview</option>
                            <option>Offer</option>
                            <option>Rejected</option>
                        </select>
                    </div>
                    <div>
                        <p>Closing Date</p>
                        <input type="date" @bind="dateCloseInput" class="input" />
                    </div>
                </div>

                <div class="row">
                    <div>
                        <p>Link</p>
                        <input type="url" class="input" @bind="linkInput" placeholder="Link" />
                    </div>
                </div>

                <div class="row">
                    <div>
                        <p>Description</p>
                        <textarea class="input description" @bind="descriptionInput" placeholder="Job Description"></textarea>
                    </div>
                </div>

                <div class="hw-row">
                    <div>
                        <p>CV</p>
                        <InputFile id="fileInput" class="input" onchange="HandleCvUpload" />
                    </div>
                    <div>
                        <p>Cover Letter</p>
                        <InputFile id="fileInput" class="input" onchange="HandleCoverLetterUpload" />
                    </div>
                </div>


            </div>
        </div>
    </div>

}


@code {
    [Parameter] public bool IsModalVisible { get; set; } // Controls modal visibility
    [Parameter] public EventCallback CloseModal { get; set; } // Event to close the modal
    [Parameter] public EventCallback<JobApplication> OnSave { get; set; }


    private string companyNameInput = "";
    private string jobTitleInput = "";
    private string statusInput = "Status";
    private string locationInput = "";
    private DateTime? dateAppliedInput { get; set; } = null;
    private DateTime? dateCloseInput { get; set; } = null;
    private string linkInput = "";
    private string descriptionInput = "";
    private IBrowserFile? cvFile;
    private IBrowserFile? clFile;

    private async Task SaveJobModal()
    {
        var job = new JobApplication( // Create JobApplication Object
            companyNameInput,
            jobTitleInput,
            locationInput,
            dateAppliedInput ?? DateTime.Now, // Default to currnt date
            dateCloseInput ?? DateTime.Now.AddDays(14), // Default closing date to 2 weeks from now
            statusInput,
            linkInput,
            cvFile,  
            clFile,
            descriptionInput
    );


        await OnSave.InvokeAsync(job); // Send to parent component -- MainLayout.cs
        await CloseJobModal(); //Clear inputs + close modal
    }


    private async Task CloseJobModal()
    {
        await CloseModal.InvokeAsync(); // Trigger the close modal action from the parent

        cvFile = null;
        clFile = null;
        companyNameInput = string.Empty;
        jobTitleInput = string.Empty;
        statusInput = "Status";
        locationInput = string.Empty;
        descriptionInput = string.Empty;
        linkInput = string.Empty;
        dateAppliedInput = null;
        dateCloseInput = null;
    }

    private void HandleCvUpload(InputFileChangeEventArgs e)
    {
        cvFile = e.File;
        
    }

    private void HandleCoverLetterUpload(InputFileChangeEventArgs e)
    {
        clFile = e.File;
    }

}
